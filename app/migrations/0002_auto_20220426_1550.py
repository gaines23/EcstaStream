# Generated by Django 3.2.6 on 2022-04-26 22:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MoviesList',
            fields=[
                ('movieid', models.BigIntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=30)),
                ('genre_list', models.JSONField(max_length=100)),
                ('release_date', models.DateTimeField()),
                ('poster_path', models.CharField(max_length=100)),
                ('tagline', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='UserPlaylist',
            fields=[
                ('user_pl_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('pl_list', models.JSONField(blank=True, default=list, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('private', models.BooleanField(default=True)),
                ('description', models.TextField(null=True)),
                ('cover_img', models.ImageField(default='defaultplaylist.png', null=True, upload_to='cover_images')),
                ('comments', models.TextField(null=True)),
                ('comments_on', models.BooleanField(default=False)),
                ('playlist_follows', models.ManyToManyField(default=False, related_name='following', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='WatchListData',
            fields=[
                ('watchid', models.AutoField(primary_key=True, serialize=False)),
                ('watch_mov_show_id', models.IntegerField()),
                ('watch_date_added', models.DateTimeField(auto_now=True)),
                ('media_type', models.IntegerField(blank=True, choices=[(1, 'Movie'), (2, 'TV')], null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserWatchList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('watch_list', models.JSONField(blank=True, default=list, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=20)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='UserPlaylistData',
            fields=[
                ('pl_data_id', models.AutoField(primary_key=True, serialize=False)),
                ('pl_mov_show_id', models.IntegerField()),
                ('pl_date_added', models.DateTimeField(auto_now=True)),
                ('media_type', models.IntegerField(blank=True, choices=[(1, 'Movie'), (2, 'TV')], null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pl_data', to=settings.AUTH_USER_MODEL)),
                ('user_playlist_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pl_id', to='app.userplaylist')),
            ],
            options={
                'ordering': ['-pl_date_added'],
            },
        ),
        migrations.CreateModel(
            name='UserFavoritesList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favs_list', models.JSONField(blank=True, default=list, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('profpic', models.ImageField(default='default.png', null=True, upload_to='profile_images')),
                ('bio', models.TextField(null=True)),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('fav_genres', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.genre')),
                ('follows', models.ManyToManyField(blank=True, related_name='followed_by', to='app.Profile')),
                ('streaming_services', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.streamingservices')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FollowRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_user', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteListData',
            fields=[
                ('favid', models.AutoField(primary_key=True, serialize=False)),
                ('fav_mov_show_id', models.IntegerField()),
                ('fav_date_added', models.DateTimeField(auto_now=True)),
                ('media_type', models.IntegerField(blank=True, choices=[(1, 'Movie'), (2, 'TV')], null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='watchlistdata',
            constraint=models.UniqueConstraint(fields=('user', 'watch_mov_show_id', 'media_type'), name='watchlist_constraint'),
        ),
        migrations.AddConstraint(
            model_name='userplaylistdata',
            constraint=models.UniqueConstraint(fields=('user_playlist_id', 'pl_mov_show_id', 'media_type'), name='user_data_playlist_constraint'),
        ),
        migrations.AddConstraint(
            model_name='userplaylist',
            constraint=models.UniqueConstraint(fields=('user', 'user_pl_id', 'title'), name='user_playlist_constraint'),
        ),
        migrations.AddConstraint(
            model_name='favoritelistdata',
            constraint=models.UniqueConstraint(fields=('user', 'fav_mov_show_id', 'media_type'), name='fav_constraint'),
        ),
    ]
